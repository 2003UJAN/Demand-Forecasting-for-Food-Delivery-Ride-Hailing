# -*- coding: utf-8 -*-
"""Welcome To Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/2003UJAN/Dynamic-Surge-Pricing-Optimization-Ride-hailing-Mobility/blob/main/train_xgboost.ipynb
"""

!pip install prophet

import pandas as pd
import numpy as np
from prophet import Prophet
from sklearn.preprocessing import MinMaxScaler
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense

df = pd.read_csv('/content/demand_data.csv')
df['timestamp'] = pd.to_datetime(df['timestamp'])

def prophet_forecast(df, target_column):
    prophet_df = df[['timestamp', target_column]].rename(columns={'timestamp': 'ds', target_column: 'y'})
    model = Prophet()
    model.fit(prophet_df)

    future = model.make_future_dataframe(periods=48, freq='H')
    forecast = model.predict(future)
    return forecast[['ds', 'yhat']]

def lstm_forecast(df, target_column):
    data = df[[target_column]].values
    scaler = MinMaxScaler()
    data = scaler.fit_transform(data)

    X, y = [], []
    for i in range(24, len(data)):
        X.append(data[i-24:i])
        y.append(data[i])
    X, y = np.array(X), np.array(y)

    model = Sequential([
        LSTM(50, activation='relu', return_sequences=True, input_shape=(24, 1)),
        LSTM(50, activation='relu'),
        Dense(1)
    ])
    model.compile(optimizer='adam', loss='mse')
    model.fit(X, y, epochs=10, batch_size=16, verbose=1)

    pred_input = data[-24:].reshape(1, 24, 1)
    prediction = model.predict(pred_input)
    return scaler.inverse_transform(prediction)[0][0]

food_forecast = prophet_forecast(df, 'food_orders')
ride_forecast = prophet_forecast(df, 'ride_requests')

food_lstm = lstm_forecast(df, 'food_orders')
ride_lstm = lstm_forecast(df, 'ride_requests')

food_forecast.to_csv('food_forecast.csv', index=False)
ride_forecast.to_csv('ride_forecast.csv', index=False)

print("Forecasting completed and results saved.")